% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smc_sim_data.R
\name{smc_sim_data}
\alias{smc_sim_data}
\title{Marginal loglikelihood estimation by sequential Monte Carlo}
\usage{
smc_sim_data(
  R,
  mu_AMP = 2.8,
  sd_AMP = 0,
  lambda = 9.08,
  lambda_size = NULL,
  lambda_ch = NULL,
  prob_h = c(0.036, 0.022),
  change_prob = c(as.Date("2020-05-01")),
  alpha_hosp = NULL,
  alpha_test = NULL,
  q_test = c(0, 0.05, 0.08, 0.16, 0.4, 0.3, 0.01),
  pi_test = c(-1.175, 7.4e-05),
  start_date = as.Date("2020-02-17"),
  loc.seed = seeding,
  mob_mat = mobility_matrices,
  pop = pop,
  unit.samp = 3,
  parallel = TRUE,
  output.call = "call.txt",
  VERBOSE = TRUE,
  DEBUG = FALSE,
  output_latent = FALSE,
  seed = 123,
  N_cores = 4
)
}
\arguments{
\item{lambda}{Expected length from sickness to hospitalization. Default to 9.08.}

\item{lambda_size}{Size parameter in the Negative binomial distribution for length until hospitalization. Default is NULL in which case a Poisson distribution is used.}

\item{lambda_ch}{If 'lambda' and 'lambda_size' are vectors, this correspond to the dates for changes in these parameters}

\item{prob_h}{Probability for hospitalisation. Default to 0.036.}

\item{alpha_hosp}{First parameter in beta-binomial distribution for hospitalization. If NULL, the model reduces to a binomial distribution with 'prob_h' being the probability for hospitalization. In general, the second (beta) parameter is calculated as 'alpha_hosp * (1 - prob_h) / prob_h'. Default is NULL.}

\item{alpha_test}{First parameter in beta-binomial distribution for testdata. If NULL, the model reduces to a binomial distribution with 'prob_h' being the probability for hospitalization. In general, the second (beta) parameter is calculated as 'alpha_hosp * (1 - prob_h) / prob_h'. Default is NULL.}

\item{pi_test}{Detection probability for test data}

\item{start_date}{starting date for initial simulations}

\item{mob_mat}{list of mobility matrices for each (6 hours) time-interval}

\item{pop}{data table describing population structure}

\item{parallel}{TRUE of parallelization during computation is to be used. Should always be used (if not in a debugging setting). Default is TRUE.}

\item{VERBOSE}{If TRUE, some output will be written during excecution. Default is TRUE}

\item{DEBUG}{If TRUE, extra information is written during excecution. Should only be used during debugging. Default is FALSE.}

\item{output_latent}{If FALSE, output of particles for latent variables is suppressed in order to save memory. Default is FALSE}

\item{seed}{Seed number. Default to 123. Note that the 'run_model' function that is called frequently do not use this seed, so that it is currently not possible to obtain a full repetition of the simulations.}

\item{end_date}{final date for doing simulation (note that hospital data used after this date)}

\item{output.latent}{If FALSE, the latent structure is not saved, only information related to the dynamic R and AMP. Can save some memory during testing. Default is FALSE.}
}
\value{
A list containing particles of latent variables ('latent'), particles of parameters ('param') and estimate of marginal log-likelihood.
}
\description{
R is assumed to be constant until 'dynR_date', thereafter following a random walk distribution on log-scale
The variance for the random walk is estimated by using the method of sufficient statistics (Storvik-2002).
Sequential Monte Carlo is performed through the Bootstrap filter, that is the latent variables (particles) are simulated from their prior.
Importance weights are calculated based on hospital data which are assumed to follow a Beta-binomial distribution for hospitalization and
a Negative binomial distribution for the length from symptons to hospitalization.
}
\details{
Latent variables are simulated by the prior model (the spread model) using the run_model routine
First initial particles are generated until an initial date using the smc_init_sim routine.
Within the dynamic period, the particles are simulated using the smc_particle_sim routine.
Thereafter simulations are calibrated towards the hospital data.
Three possible predictions are made available: Filtering through \eqn{p(x_t|y_{1:t})}, fixed-lag smoothing through \eqn{p(x_t|y_{1:t+u})} and
full smoothing through \eqn{p(x_t|y_{1:T})}. All incidence predictions are only given by full smoothing.
Simulation results related to R and AMP are written into some output files. All predictions are returned as a list.

Global variables used
'hospD'

There are currently many global parameter used in the underlying routine 'run_model'. No control on that
}
\examples{
res.smc = smc_loglik(params=c(R0,Reff,AMP),B=10,dynamic.R=TRUE)
}
